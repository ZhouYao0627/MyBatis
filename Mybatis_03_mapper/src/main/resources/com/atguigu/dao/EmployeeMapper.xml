<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapper">
    <!--弹幕：这个配置文件相对应Dao接口的实现类-->
    <!--namespace:名称空间；指定为接口的全类名  (弹幕：用于绑定Dao接口)
        id:唯一标识
        resultType:返回值类型
        #{id}:从传递过来的参数中取出id值
    -->

    <!--Map<String, Employee> getEmpByLastNameLikeReturnMap(String lastName);-->
    <select id="getEmpByLastNameLikeReturnMap" resultType="com.atguigu.mybatis.bean.Employee">
        select id, last_name lastname, email, gender
        from tbl_employee
        where last_name like #{lastname}
    </select>

    <!--Map<String, Object> getEmpByIdReturnMap(Integer id);-->
    <select id="getEmpByIdReturnMap" resultType="java.util.Map">
        select id, last_name lastname, email, gender
        from tbl_employee
        where id = #{id}
    </select>

    <!--List<Employee> getEmpsByLastNameLike(String lastName);-->
    <!--resultType：如果返回的是一个集合，要写集合中元素的类型  -->
    <select id="getEmpsByLastNameLike" resultType="com.atguigu.mybatis.bean.Employee">
        select id, last_name lastname, email, gender
        from tbl_employee
        where last_name like #{lastname}
    </select>

    <!--Employee getEmpByMap(Map<String, Object> map);-->
    <select id="getEmpByMap" resultType="com.atguigu.mybatis.bean.Employee">
        select id, last_name lastname, email, gender
        from tbl_employee
        where id = #{id}
          and last_name = #{lastname}
    </select>

    <!--Employee getEmpByIdAndLastName(Integer id, String lastname);-->
    <select id="getEmpByIdAndLastName" resultType="com.atguigu.mybatis.bean.Employee">
        select id, last_name lastname, email, gender
        from tbl_employee
        where id = #{id}
          and last_name = #{lastname}
    </select>

    <!--Employee getEmpById(Integer id);-->
    <select id="getEmpById" resultType="com.atguigu.mybatis.bean.Employee">
        select id, last_name lastname, email, gender
        from tbl_employee
        where id = #{id}
    </select>

    <!--void addEmp(Employee employee);-->
    <!--parameterType:可以省略
    获取自增主键的值:
        mysql支持自增主键，自增主键的获取，Mybatis也是利用statement.getGeneratedKeys();
        useGeneratedKeys="true" -> 使用自增主键获取主键值策略
        keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
    -->
    <insert id="addEmp" parameterType="com.atguigu.mybatis.bean.Employee"
            useGeneratedKeys="true" keyProperty="id">
        insert into tbl_employee(last_name, email, gender)
        values (#{lastname}, #{email}, #{gender})
    </insert>

    <!--void updateEmp(Employee employee);-->
    <update id="updateEmp">
        update tbl_employee
        set last_name=#{lastname},
            email=#{email},
            gender=#{gender}
        where id = #{id}
    </update>

    <!--void deleteEmpById(Integer id);-->
    <delete id="deleteEmpById">
        delete
        from tbl_employee
        where id = #{id}
    </delete>


</mapper>